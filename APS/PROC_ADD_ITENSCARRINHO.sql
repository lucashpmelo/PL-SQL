CREATE OR REPLACE PROCEDURE PROC_ADD_ITENSCARRINHO(
ID_CLIENTE TB_CLIENTE.COD_CLIENTE%TYPE, ID_PRODUTO TB_PRODUTO.COD_PRODUTO%TYPE, PRO_QTDE TB_ITENSCARRINHO.QTDE%TYPE)
IS
	CHECK_CARRINHO BOOLEAN := FALSE;
	ID_CARRINHO TB_CARRINHO.COD_CARRINHO%TYPE;

	ERRO_CLI_NULL EXCEPTION;
	ERRO_PRO_NULL EXCEPTION;
	ERRO_QTD_NULL EXCEPTION;
	ERRO_ESTOQUE EXCEPTION;

	ERRO_FOREIGN_KEY EXCEPTION;
	PRAGMA EXCEPTION_INIT(ERRO_FOREIGN_KEY, -02291);
	ERRO_COD_PRODUTO EXCEPTION;
	PRAGMA EXCEPTION_INIT(ERRO_COD_PRODUTO, -20210);
BEGIN
	--VALIDA ENTRADA DE DADOS--
	
	IF ID_CLIENTE IS NULL THEN
		RAISE ERRO_CLI_NULL;
	ELSIF ID_PRODUTO IS NULL THEN
		RAISE ERRO_PRO_NULL;
	ELSIF PRO_QTDE IS NULL THEN
		RAISE ERRO_QTD_NULL;
	END IF;
	
	--VERIFICA SE O PRODUTO EXISTE E SE ESTA DISPONIVEL NO ESTOQUE--
	
	IF FUN_VALIDA_PRO_QTDE(ID_PRODUTO, PRO_QTDE) THEN
	
		--VERIFICA SE JÁ EXISTE UM CARRINHO ABERTO--
	
		BEGIN
			SELECT
				COD_CARRINHO INTO ID_CARRINHO
			FROM
				TB_CARRINHO
			WHERE
					COD_CLIENTE = ID_CLIENTE
				AND
					IND_EXCLUIDO <> 1;
			
			CHECK_CARRINHO := TRUE;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				CHECK_CARRINHO := FALSE;
			WHEN OTHERS THEN
				CHECK_CARRINHO := FALSE;
		END;
		
		--CASO NÃO EXISTA UM CARRINHO ABERTO ELE É CRIADO E O COD_CARRINHO RETORNADO--
		
		IF NOT CHECK_CARRINHO THEN
			INSERT INTO TB_CARRINHO (COD_CARRINHO, COD_CLIENTE) VALUES (SQ_CARRINHO.NEXTVAL, ID_CLIENTE) RETURNING COD_CARRINHO INTO ID_CARRINHO;
		END IF;
		
		--INSERE O PRODUTO NO CARRINHO DO CLIENTE--
		
		INSERT INTO TB_ITENSCARRINHO (COD_ITENSCARRINHO, COD_PRODUTO, COD_CARRINHO, QTDE) VALUES (SQ_ITENSCARRINHO.NEXTVAL, ID_PRODUTO, ID_CARRINHO, PRO_QTDE);
		
		COMMIT;
		
		DBMS_OUTPUT.PUT_LINE('PRODUTO ADICIONADO COM SUCESSO AO CARRINHO!!!');
		
	ELSE
		RAISE ERRO_ESTOQUE;
	END IF;
	

EXCEPTION
	WHEN ERRO_CLI_NULL THEN
		ROLLBACK;
		RAISE_APPLICATION_ERROR(-20200, 'ID DO CLIENTE NÃO PODE SER NULL!!!');
	WHEN ERRO_PRO_NULL THEN
		ROLLBACK;
		RAISE_APPLICATION_ERROR(-20201, 'ID DO PRODUTO NÃO PODE SER NULL!!!');
	WHEN ERRO_QTD_NULL THEN
		ROLLBACK;
		RAISE_APPLICATION_ERROR(-20202, 'QUANTIDADE DO PRODUTO NÃO PODE SER NULL!!!');
	WHEN DUP_VAL_ON_INDEX THEN
		ROLLBACK;
		RAISE_APPLICATION_ERROR(-20203, 'ID EM USO!!!');
	WHEN ERRO_FOREIGN_KEY THEN		
		ROLLBACK;
		RAISE_APPLICATION_ERROR(-20204, 'CLIENTE NÃO EXISTE!!!');
	WHEN ERRO_ESTOQUE THEN		
		ROLLBACK;
		RAISE_APPLICATION_ERROR(-20205, 'QUANTIDADE DO PRODUTO INDISPONIVEL!!!');
	WHEN ERRO_COD_PRODUTO THEN		
		ROLLBACK;
		RAISE_APPLICATION_ERROR(-20206, 'PRODUTO NÃO EXISTE!!!');
	WHEN OTHERS THEN
		ROLLBACK;
		RAISE_APPLICATION_ERROR(-20207, 'ALGUM OUTRO ERRO OCORREU!!!');
END;
CREATE OR REPLACE FUNCTION GET_JOB(ID JOBS.JOB_ID%TYPE) RETURNS JOBS.JOB_TITLE%TYPE
AS
$$
DECLARE
	TITULO JOBS.JOB_TITLE%TYPE;
BEGIN
	SELECT JOB_TITLE INTO STRICT TITULO FROM JOBS WHERE JOB_ID = ID;
	RETURN TITULO;
EXCEPTION
	WHEN TOO_MANY_ROWS THEN
		RETURN 'EXISTE MAIS DE UM JOB NO BANCO DE DADOS';
	WHEN NO_DATA_FOUND THEN
		RETURN 'NÃO ENCONTROU JOB COM ESTE NOME NO BANCO DE DADOS';
	WHEN OTHERS THEN
		RETURN 'OCORREU UM ERRO';
END;
$$LANGUAGE PLPGSQL;


-----TESTE-----
DO
$$
BEGIN
	RAISE NOTICE '%', GET_JOB('AD_PRES');
END;
$$

--OU--

SELECT JOB_ID, GET_JOB(JOB_ID) FROM JOBS

-----------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION GET_ANNUAL_COMP(SALARIO EMPLOYEES.SALARY%TYPE, COMISSAO EMPLOYEES.COMMISSION_PCT%TYPE) RETURNS EMPLOYEES.SALARY%TYPE
AS
$$
DECLARE
	NOVOSAL EMPLOYEES.SALARY%TYPE;
	COMISSAONULL TEXT := 'COMISSÃO OU SALARIO IGUAL A NULL';
BEGIN
	IF COMISSAO IS NULL OR SALARIO IS NULL THEN
		RAISE EXCEPTION '%', COMISSAONULL;
	END IF;
	
	NOVOSAL := (SALARIO * 12) + COMISSAO * SALARIO * 12;
	RETURN NOVOSAL;
END;
$$LANGUAGE PLPGSQL;

-----TESTE-----

SELECT EMPLOYEE_ID, SALARY, GET_ANNUAL_COMP(SALARY, COMMISSION_PCT) FROM EMPLOYEES WHERE EMPLOYEE_ID = 145
CREATE OR REPLACE FUNCTION FUN_VALID_DEPTID(ID EMPLOYEES.DEPARTMENT_ID%TYPE) RETURNS BOOLEAN
AS
$$
DECLARE
	DEPT BOOLEAN := FALSE;
BEGIN
	SELECT TRUE INTO STRICT DEPT FROM DEPARTMENTS WHERE DEPARTMENT_ID = ID;
	RETURN DEPT;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		RETURN FALSE;
	WHEN OTHERS THEN
		RETURN FALSE;
END;
$$LANGUAGE PLPGSQL;


CREATE OR REPLACE FUNCTION PROC_ADD_EMPLOYEE(NOME EMPLOYEES.FIRST_NAME%TYPE, SOBRE EMPLOYEES.LAST_NAME%TYPE, EMAIL EMPLOYEES.EMAIL%TYPE, DEPT EMPLOYEES.DEPARTMENT_ID%TYPE, DATA EMPLOYEES.HIRE_DATE%TYPE) RETURNS VOID
AS
$$
BEGIN
	IF DATA < CURRENT_DATE THEN
		RAISE EXCEPTION USING ERRCODE = 'DT999';
	END IF;
	
	IF FUN_VALID_DEPTID(DEPT) THEN	
		INSERT INTO EMPLOYEES(FIRST_NAME, LAST_NAME, EMAIL, DEPARTMENT_ID, HIRE_DATE) VALUES(NOME, SOBRE, EMAIL, DEPT, DATA);
	ELSE
		RAISE EXCEPTION USING ERRCODE = 'PL999';
	END IF;
EXCEPTION
	WHEN NOT_NULL_VIOLATION THEN
		RAISE NOTICE 'NÃO PODE TER VALORES NULL.';
	WHEN UNIQUE_VIOLATION THEN
		RAISE NOTICE 'ID: % EM USO.', ID;
	WHEN SQLSTATE 'PL999' THEN
    	RAISE NOTICE 'DEPARTAMENTO NÃO CADASTRADO.';
	WHEN SQLSTATE 'DT999' THEN
    	RAISE NOTICE 'DATA INVALIDA.';
	WHEN OTHERS THEN
		RAISE NOTICE 'ERRO!!!';
END;
$$LANGUAGE PLPGSQL


DO
$$
BEGIN
	EXECUTE PROC_ADD_EMPLOYEE('JANE', 'HARRIS', 'JAHARRIS', 15, '06/11/2018');
END;
$$